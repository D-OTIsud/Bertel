{
  "info": {
    "name": "Bertel API v3.0",
    "description": "Collection Postman complète pour l'API Bertel v3.0 - OTI du Sud\n\nCette collection inclut tous les endpoints documentés avec leurs paramètres, exemples et variables d'environnement.\n\n## Authentification\nTous les endpoints nécessitent une authentification via headers (apikey, Authorization Bearer, etc.)\n\n## Variables d'environnement\n- `base_url`: URL de base de l'API\n- `apikey`: Votre clé API\n- `authorization`: Token Bearer (alternative)\n\n## Endpoints disponibles\n1. **get_object_resource** - Récupérer une ressource spécifique\n2. **list_object_resources_page** - Lister avec pagination page/offset\n3. **list_object_resources_since_fast** - Lister depuis une date (keyset)\n4. **list_object_resources_filtered_page** - Lister avec filtres riches (page/offset)\n5. **list_object_resources_filtered_since_fast** - Filtres + depuis une date (keyset)",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_postman_id": "bertel-api-v3-collection"
  },
  "item": [
    {
      "name": "1. Authentication & Headers",
      "item": [
        {
          "name": "Test Authentication",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "apikey",
                "value": "{{apikey}}",
                "description": "Votre clé API"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"p_object_id\": \"test-id\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/rpc/get_object_resource",
              "host": ["{{base_url}}"],
              "path": ["rpc", "get_object_resource"]
            },
            "description": "Test simple pour vérifier l'authentification"
          }
        }
      ],
      "description": "Tests d'authentification et configuration des headers"
    },
    {
      "name": "2. Core Endpoints",
      "item": [
        {
          "name": "Get Object Resource",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "apikey",
                "value": "{{apikey}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"p_object_id\": \"{{object_id}}\",\n  \"p_lang_prefs\": [\"fr\", \"en\"],\n  \"p_track_format\": \"none\",\n  \"p_options\": {\n    \"include_stages\": false,\n    \"stage_color\": \"#FF0000\"\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/rpc/get_object_resource",
              "host": ["{{base_url}}"],
              "path": ["rpc", "get_object_resource"]
            },
            "description": "Récupérer toutes les données d'un objet spécifique. Inclut optionnellement le tracé KML/GPX pour les itinéraires."
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "apikey",
                    "value": "{{apikey}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"p_object_id\": \"example-id\"\n}"
                },
                "url": {
                  "raw": "{{base_url}}/rpc/get_object_resource",
                  "host": ["{{base_url}}"],
                  "path": ["rpc", "get_object_resource"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"object_id\": \"example-id\",\n  \"type\": \"ITI\",\n  \"status\": \"published\",\n  \"name\": {\n    \"fr\": \"Exemple d'itinéraire\",\n    \"en\": \"Example itinerary\"\n  },\n  \"description\": {\n    \"fr\": \"Description de l'itinéraire...\",\n    \"en\": \"Itinerary description...\"\n  },\n  \"geometry\": {\n    \"type\": \"LineString\",\n    \"coordinates\": [[4.85, 45.75], [4.86, 45.76]]\n  },\n  \"track_data\": null\n}"
            }
          ]
        },
        {
          "name": "List Object Resources (Page)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "apikey",
                "value": "{{apikey}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"p_page\": 1,\n  \"p_limit\": 20,\n  \"p_types\": [\"ITI\", \"HER\"],\n  \"p_status\": [\"published\"],\n  \"p_search\": \"rando\",\n  \"p_lang_prefs\": [\"fr\"],\n  \"p_track_format\": \"none\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/rpc/list_object_resources_page",
              "host": ["{{base_url}}"],
              "path": ["rpc", "list_object_resources_page"]
            },
            "description": "Lister les ressources avec pagination page/offset. Idéal pour la navigation classique."
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "apikey",
                    "value": "{{apikey}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"p_page\": 1,\n  \"p_limit\": 20\n}"
                },
                "url": {
                  "raw": "{{base_url}}/rpc/list_object_resources_page",
                  "host": ["{{base_url}}"],
                  "path": ["rpc", "list_object_resources_page"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"info\": {\n    \"kind\": \"page\",\n    \"language\": \"fr\",\n    \"language_fallbacks\": [\"fr\"],\n    \"page\": 1,\n    \"limit\": 20,\n    \"total\": 150,\n    \"total_pages\": 8\n  },\n  \"data\": [\n    {\n      \"object_id\": \"iti-001\",\n      \"type\": \"ITI\",\n      \"status\": \"published\",\n      \"name\": {\n        \"fr\": \"Sentier des crêtes\"\n      }\n    }\n  ]\n}"
            }
          ]
        },
        {
          "name": "List Object Resources (Since)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "apikey",
                "value": "{{apikey}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"p_since\": \"2024-04-01T00:00:00Z\",\n  \"p_cursor\": null,\n  \"p_use_source\": false,\n  \"p_lang_prefs\": [\"fr\"],\n  \"p_limit\": 50,\n  \"p_types\": [\"ITI\"],\n  \"p_status\": [\"published\"],\n  \"p_track_format\": \"none\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/rpc/list_object_resources_since_fast",
              "host": ["{{base_url}}"],
              "path": ["rpc", "list_object_resources_since_fast"]
            },
            "description": "Synchroniser ce qui a changé depuis un instant T. Robuste pendant les mises à jour. Utilise le keyset pagination."
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "apikey",
                    "value": "{{apikey}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"p_since\": \"2024-04-01T00:00:00Z\"\n}"
                },
                "url": {
                  "raw": "{{base_url}}/rpc/list_object_resources_since_fast",
                  "host": ["{{base_url}}"],
                  "path": ["rpc", "list_object_resources_since_fast"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"info\": {\n    \"kind\": \"since\",\n    \"language\": \"fr\",\n    \"language_fallbacks\": [\"fr\"],\n    \"since\": \"2024-04-01T00:00:00Z\",\n    \"use_source\": false,\n    \"limit\": 50,\n    \"cursor\": \"<opaque>\",\n    \"next_cursor\": \"<opaque or null>\"\n  },\n  \"data\": []\n}"
            }
          ]
        }
      ],
      "description": "Endpoints principaux pour récupérer et lister les ressources"
    },
    {
      "name": "3. Advanced Filtering",
      "item": [
        {
          "name": "List with Rich Filters (Page)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "apikey",
                "value": "{{apikey}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"p_page\": 1,\n  \"p_limit\": 20,\n  \"p_types\": [\"HER\"],\n  \"p_status\": [\"published\"],\n  \"p_lang_prefs\": [\"fr\"],\n  \"p_track_format\": \"none\",\n  \"p_filters\": {\n    \"amenities_any\": [\"PARKING\", \"WIFI\"],\n    \"pet_accepted\": true,\n    \"within_radius\": {\n      \"lat\": 45.76,\n      \"lon\": 4.84,\n      \"radius_m\": 20000\n    },\n    \"media_types_any\": [\"image\"],\n    \"media_published_only\": true,\n    \"media_must_have_main\": true\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/rpc/list_object_resources_filtered_page",
              "host": ["{{base_url}}"],
              "path": ["rpc", "list_object_resources_filtered_page"]
            },
            "description": "Lister avec filtres riches et pagination page/offset. Inclut tous les filtres avancés (équipements, géolocalisation, médias, etc.)"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "apikey",
                    "value": "{{apikey}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"p_page\": 1,\n  \"p_limit\": 20,\n  \"p_filters\": {\n    \"amenities_any\": [\"PARKING\"]\n  }\n}"
                },
                "url": {
                  "raw": "{{base_url}}/rpc/list_object_resources_filtered_page",
                  "host": ["{{base_url}}"],
                  "path": ["rpc", "list_object_resources_filtered_page"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"info\": {\n    \"kind\": \"page\",\n    \"language\": \"fr\",\n    \"language_fallbacks\": [\"fr\"],\n    \"page\": 1,\n    \"limit\": 20,\n    \"total\": 25,\n    \"total_pages\": 2,\n    \"filters_applied\": {\n      \"amenities_any\": [\"PARKING\"]\n    }\n  },\n  \"data\": []\n}"
            }
          ]
        },
        {
          "name": "List with Rich Filters (Since)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "apikey",
                "value": "{{apikey}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"p_since\": \"2024-04-01T00:00:00Z\",\n  \"p_cursor\": null,\n  \"p_use_source\": false,\n  \"p_lang_prefs\": [\"fr\"],\n  \"p_limit\": 50,\n  \"p_types\": [\"HER\"],\n  \"p_status\": [\"published\"],\n  \"p_track_format\": \"none\",\n  \"p_filters\": {\n    \"amenities_any\": [\"PARKING\", \"WIFI\"],\n    \"itinerary\": {\n      \"is_loop\": true,\n      \"distance_max_km\": 15,\n      \"practices_any\": [\"hiking\"]\n    },\n    \"within_radius\": {\n      \"lat\": 45.76,\n      \"lon\": 4.84,\n      \"radius_m\": 20000\n    },\n    \"media_types_any\": [\"image\"],\n    \"media_published_only\": true,\n    \"media_must_have_main\": true\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/rpc/list_object_resources_filtered_since_fast",
              "host": ["{{base_url}}"],
              "path": ["rpc", "list_object_resources_filtered_since_fast"]
            },
            "description": "Filtres riches + synchronisation depuis une date. Combine tous les filtres avancés avec le keyset pagination pour une synchronisation robuste."
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "apikey",
                    "value": "{{apikey}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"p_since\": \"2024-04-01T00:00:00Z\",\n  \"p_filters\": {\n    \"amenities_any\": [\"PARKING\"]\n  }\n}"
                },
                "url": {
                  "raw": "{{base_url}}/rpc/list_object_resources_filtered_since_fast",
                  "host": ["{{base_url}}"],
                  "path": ["rpc", "list_object_resources_filtered_since_fast"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"info\": {\n    \"kind\": \"since\",\n    \"language\": \"fr\",\n    \"language_fallbacks\": [\"fr\"],\n    \"since\": \"2024-04-01T00:00:00Z\",\n    \"use_source\": false,\n    \"limit\": 50,\n    \"cursor\": \"<opaque>\",\n    \"next_cursor\": \"<opaque or null>\",\n    \"filters_applied\": {\n      \"amenities_any\": [\"PARKING\"]\n    }\n  },\n  \"data\": []\n}"
            }
          ]
        }
      ],
      "description": "Endpoints avec filtres avancés pour des recherches complexes"
    },
    {
      "name": "4. Filter Examples",
      "item": [
        {
          "name": "Equipment & Services Filters",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "apikey",
                "value": "{{apikey}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"p_page\": 1,\n  \"p_limit\": 20,\n  \"p_types\": [\"HER\"],\n  \"p_status\": [\"published\"],\n  \"p_lang_prefs\": [\"fr\"],\n  \"p_filters\": {\n    \"amenities_any\": [\"PARKING\", \"WIFI\"],\n    \"amenities_all\": [\"RESTAURANT\"],\n    \"amenity_families_any\": [\"ACCOMMODATION\"],\n    \"pet_accepted\": true,\n    \"payment_methods_any\": [\"CREDIT_CARD\", \"CASH\"],\n    \"environment_tags_any\": [\"MOUNTAIN\", \"FOREST\"],\n    \"languages_any\": [\"fr\", \"en\"]\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/rpc/list_object_resources_filtered_page",
              "host": ["{{base_url}}"],
              "path": ["rpc", "list_object_resources_filtered_page"]
            },
            "description": "Exemple de filtres pour équipements et services"
          }
        },
        {
          "name": "Media Filters",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "apikey",
                "value": "{{apikey}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"p_page\": 1,\n  \"p_limit\": 20,\n  \"p_types\": [\"HER\", \"ITI\"],\n  \"p_status\": [\"published\"],\n  \"p_lang_prefs\": [\"fr\"],\n  \"p_filters\": {\n    \"media_types_any\": [\"image\", \"video\"],\n    \"media_published_only\": true,\n    \"media_must_have_main\": true\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/rpc/list_object_resources_filtered_page",
              "host": ["{{base_url}}"],
              "path": ["rpc", "list_object_resources_filtered_page"]
            },
            "description": "Exemple de filtres pour les médias"
          }
        },
        {
          "name": "Geolocation Filters",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "apikey",
                "value": "{{apikey}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"p_page\": 1,\n  \"p_limit\": 20,\n  \"p_types\": [\"HER\", \"ITI\"],\n  \"p_status\": [\"published\"],\n  \"p_lang_prefs\": [\"fr\"],\n  \"p_filters\": {\n    \"within_radius\": {\n      \"lat\": 45.76,\n      \"lon\": 4.84,\n      \"radius_m\": 20000\n    },\n    \"bbox\": [4.8, 45.7, 4.9, 45.8]\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/rpc/list_object_resources_filtered_page",
              "host": ["{{base_url}}"],
              "path": ["rpc", "list_object_resources_filtered_page"]
            },
            "description": "Exemple de filtres géolocalisation (rayon et bbox)"
          }
        },
        {
          "name": "Itinerary Filters",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "apikey",
                "value": "{{apikey}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"p_page\": 1,\n  \"p_limit\": 20,\n  \"p_types\": [\"ITI\"],\n  \"p_status\": [\"published\"],\n  \"p_lang_prefs\": [\"fr\"],\n  \"p_filters\": {\n    \"itinerary\": {\n      \"is_loop\": true,\n      \"difficulty_min\": 1,\n      \"difficulty_max\": 3,\n      \"distance_min_km\": 5,\n      \"distance_max_km\": 15,\n      \"duration_min_h\": 2,\n      \"duration_max_h\": 6,\n      \"practices_any\": [\"hiking\", \"trail_running\"]\n    }\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/rpc/list_object_resources_filtered_page",
              "host": ["{{base_url}}"],
              "path": ["rpc", "list_object_resources_filtered_page"]
            },
            "description": "Exemple de filtres pour les itinéraires"
          }
        },
        {
          "name": "Capacity & Classification Filters",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "apikey",
                "value": "{{apikey}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"p_page\": 1,\n  \"p_limit\": 20,\n  \"p_types\": [\"HER\"],\n  \"p_status\": [\"published\"],\n  \"p_lang_prefs\": [\"fr\"],\n  \"p_filters\": {\n    \"capacity_filters\": [\n      {\n        \"code\": \"TOTAL_CAPACITY\",\n        \"min\": 10,\n        \"max\": 100\n      }\n    ],\n    \"classifications_any\": [\n      {\n        \"scheme_code\": \"STARS\",\n        \"value_code\": \"4\"\n      }\n    ],\n    \"tags_any\": [\"luxury\", \"family-friendly\"],\n    \"meeting_room\": {\n      \"min_count\": 1,\n      \"min_area_m2\": 50,\n      \"min_cap_theatre\": 20,\n      \"equipment_any\": [\"PROJECTOR\", \"WHITEBOARD\"]\n    }\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/rpc/list_object_resources_filtered_page",
              "host": ["{{base_url}}"],
              "path": ["rpc", "list_object_resources_filtered_page"]
            },
            "description": "Exemple de filtres pour capacité et classement"
          }
        }
      ],
      "description": "Exemples concrets de tous les types de filtres disponibles"
    },
    {
      "name": "5. Track Data Examples",
      "item": [
        {
          "name": "Get Itinerary with KML Track",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "apikey",
                "value": "{{apikey}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"p_object_id\": \"{{itinerary_id}}\",\n  \"p_lang_prefs\": [\"fr\"],\n  \"p_track_format\": \"kml\",\n  \"p_options\": {\n    \"include_stages\": true,\n    \"stage_color\": \"#FF0000\"\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/rpc/get_object_resource",
              "host": ["{{base_url}}"],
              "path": ["rpc", "get_object_resource"]
            },
            "description": "Récupérer un itinéraire avec son tracé KML et les étapes"
          }
        },
        {
          "name": "Get Itinerary with GPX Track",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "apikey",
                "value": "{{apikey}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"p_object_id\": \"{{itinerary_id}}\",\n  \"p_lang_prefs\": [\"fr\"],\n  \"p_track_format\": \"gpx\",\n  \"p_options\": {\n    \"include_stages\": false,\n    \"stage_color\": \"#00FF00\"\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/rpc/get_object_resource",
              "host": ["{{base_url}}"],
              "path": ["rpc", "get_object_resource"]
            },
            "description": "Récupérer un itinéraire avec son tracé GPX"
          }
        }
      ],
      "description": "Exemples pour récupérer les données de tracé (KML/GPX)"
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Auto-set timestamp for since requests",
          "if (pm.request.url.toString().includes('since_fast')) {",
          "    const timestamp = new Date().toISOString();",
          "    pm.environment.set('current_timestamp', timestamp);",
          "}"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Common test for all requests",
          "pm.test('Status code is 200', function () {",
          "    pm.response.to.have.status(200);",
          "});",
          "",
          "pm.test('Response is JSON', function () {",
          "    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');",
          "});",
          "",
          "pm.test('Response has required structure', function () {",
          "    const jsonData = pm.response.json();",
          "    ",
          "    if (pm.request.url.toString().includes('get_object_resource')) {",
          "        pm.expect(jsonData).to.have.property('object_id');",
          "        pm.expect(jsonData).to.have.property('type');",
          "        pm.expect(jsonData).to.have.property('status');",
          "    } else if (pm.request.url.toString().includes('list_object_resources')) {",
          "        pm.expect(jsonData).to.have.property('info');",
          "        pm.expect(jsonData).to.have.property('data');",
          "        pm.expect(jsonData.info).to.have.property('kind');",
          "        pm.expect(jsonData.info).to.have.property('language');",
          "    }",
          "});",
          "",
          "// Store useful data for next requests",
          "if (pm.request.url.toString().includes('list_object_resources') && pm.response.json().data.length > 0) {",
          "    const firstObject = pm.response.json().data[0];",
          "    pm.environment.set('object_id', firstObject.object_id);",
          "    if (firstObject.type === 'ITI') {",
          "        pm.environment.set('itinerary_id', firstObject.object_id);",
          "    }",
          "}"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "base_url",
      "value": "https://api.bertel.example.com",
      "description": "URL de base de l'API Bertel"
    },
    {
      "key": "apikey",
      "value": "your-api-key-here",
      "description": "Votre clé API"
    },
    {
      "key": "authorization",
      "value": "Bearer your-token-here",
      "description": "Token Bearer (alternative à apikey)"
    },
    {
      "key": "object_id",
      "value": "",
      "description": "ID d'objet pour les tests (auto-rempli)"
    },
    {
      "key": "itinerary_id",
      "value": "",
      "description": "ID d'itinéraire pour les tests de tracé (auto-rempli)"
    },
    {
      "key": "current_timestamp",
      "value": "",
      "description": "Timestamp actuel pour les requêtes since (auto-généré)"
    }
  ]
}
